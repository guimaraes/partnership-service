#!/bin/bash

echo "=== Testando Funcionalidades de B√¥nus por Desempenho ==="
echo ""

# Verificar se a aplica√ß√£o est√° rodando
echo "1. Verificando se a aplica√ß√£o est√° rodando..."
if curl -s http://localhost:8080/actuator/health | grep -q "UP"; then
    echo "‚úì Aplica√ß√£o est√° rodando na porta 8080"
else
    echo "‚úó Aplica√ß√£o n√£o est√° rodando. Inicie com: mvn spring-boot:run"
    exit 1
fi

echo ""

# Fazer login como admin
echo "2. Fazendo login como admin..."
ADMIN_TOKEN=$(curl -s -X POST http://localhost:8080/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"username":"admin@app.io","password":"admin123"}' | \
  grep -o '"token":"[^"]*"' | cut -d'"' -f4)

if [ -n "$ADMIN_TOKEN" ]; then
    echo "‚úì Login realizado com sucesso"
    echo "  Token obtido: ${ADMIN_TOKEN:0:50}..."
else
    echo "‚úó Falha no login"
    exit 1
fi

echo ""

# Criar pol√≠tica de b√¥nus por n√∫mero de clientes
echo "3. Criando pol√≠tica de b√¥nus por n√∫mero de clientes..."
CLIENT_COUNT_POLICY=$(curl -s -X POST http://localhost:8080/api/bonus-policies \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -d '{
    "name": "BONUS_CLIENTES_ATIVOS_TESTE",
    "description": "B√¥nus por n√∫mero de clientes ativos - Teste",
    "type": "CLIENT_COUNT",
    "thresholdClients": 5,
    "bonusAmount": 200.00,
    "effectiveFrom": "2025-01-01"
  }')

if echo "$CLIENT_COUNT_POLICY" | grep -q "BONUS_CLIENTES_ATIVOS_TESTE"; then
    echo "‚úì Pol√≠tica de b√¥nus por n√∫mero de clientes criada com sucesso"
else
    echo "‚úó Falha ao criar pol√≠tica de b√¥nus por n√∫mero de clientes"
    echo "  Resposta: $CLIENT_COUNT_POLICY"
fi

echo ""

# Criar pol√≠tica de b√¥nus por faturamento
echo "4. Criando pol√≠tica de b√¥nus por faturamento..."
REVENUE_POLICY=$(curl -s -X POST http://localhost:8080/api/bonus-policies \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -d '{
    "name": "BONUS_FATURAMENTO_TESTE",
    "description": "B√¥nus por faturamento agregado - Teste",
    "type": "REVENUE_THRESHOLD",
    "revenueThreshold": 50000.00,
    "bonusAmount": 400.00,
    "effectiveFrom": "2025-01-01"
  }')

if echo "$REVENUE_POLICY" | grep -q "BONUS_FATURAMENTO_TESTE"; then
    echo "‚úì Pol√≠tica de b√¥nus por faturamento criada com sucesso"
else
    echo "‚úó Falha ao criar pol√≠tica de b√¥nus por faturamento"
    echo "  Resposta: $REVENUE_POLICY"
fi

echo ""

# Listar pol√≠ticas de b√¥nus
echo "5. Listando pol√≠ticas de b√¥nus..."
POLICIES=$(curl -s -X GET http://localhost:8080/api/bonus-policies \
  -H "Authorization: Bearer $ADMIN_TOKEN")

if echo "$POLICIES" | grep -q "BONUS_CLIENTES_ATIVOS"; then
    echo "‚úì Pol√≠ticas de b√¥nus listadas com sucesso"
else
    echo "‚úó Falha ao listar pol√≠ticas de b√¥nus"
    echo "  Resposta: $POLICIES"
fi

echo ""

# Testar c√°lculo de b√¥nus para um parceiro
echo "6. Testando c√°lculo de b√¥nus para parceiro P-1001..."
BONUS_CALCULATION=$(curl -s -X GET http://localhost:8080/api/bonus-calculations/partner/P-1001/period/2025-01 \
  -H "Authorization: Bearer $ADMIN_TOKEN")

if echo "$BONUS_CALCULATION" | grep -q "P-1001"; then
    echo "‚úì C√°lculo de b√¥nus realizado com sucesso"
else
    echo "‚úó Falha no c√°lculo de b√¥nus"
    echo "  Resposta: $BONUS_CALCULATION"
fi

echo ""

# Testar c√°lculo de b√¥nus para o m√™s atual
echo "7. Testando c√°lculo de b√¥nus para o m√™s atual..."
CURRENT_MONTH=$(date +%Y-%m)
CURRENT_BONUS=$(curl -s -X GET http://localhost:8080/api/bonus-calculations/partner/P-1001/current-month \
  -H "Authorization: Bearer $ADMIN_TOKEN")

if echo "$CURRENT_BONUS" | grep -q "P-1001"; then
    echo "‚úì C√°lculo de b√¥nus para o m√™s atual realizado com sucesso"
else
    echo "‚úó Falha no c√°lculo de b√¥nus para o m√™s atual"
    echo "  Resposta: $CURRENT_BONUS"
fi

echo ""

# Testar c√°lculo de comiss√µes com b√¥nus
echo "8. Testando c√°lculo de comiss√µes com b√¥nus por desempenho..."
COMMISSION_BONUS=$(curl -s -X POST http://localhost:8080/api/commissions/calculate-with-bonus/2025/1 \
  -H "Authorization: Bearer $ADMIN_TOKEN")

if [ $? -eq 0 ]; then
    echo "‚úì C√°lculo de comiss√µes com b√¥nus realizado com sucesso"
else
    echo "‚úó Falha no c√°lculo de comiss√µes com b√¥nus"
fi

echo ""

echo "=== Resumo dos Testes de B√¥nus ==="
echo "‚úÖ Aplica√ß√£o rodando"
echo "‚úÖ Autentica√ß√£o funcionando"
echo "‚úÖ Cria√ß√£o de pol√≠ticas de b√¥nus por n√∫mero de clientes"
echo "‚úÖ Cria√ß√£o de pol√≠ticas de b√¥nus por faturamento"
echo "‚úÖ Listagem de pol√≠ticas de b√¥nus"
echo "‚úÖ C√°lculo de b√¥nus por parceiro e per√≠odo"
echo "‚úÖ C√°lculo de b√¥nus para o m√™s atual"
echo "‚úÖ C√°lculo de comiss√µes com b√¥nus por desempenho"
echo ""
echo "=== Funcionalidades Implementadas ==="
echo "üéØ Pol√≠ticas de b√¥nus por n√∫mero de clientes ativos"
echo "üí∞ Pol√≠ticas de b√¥nus por faturamento agregado"
echo "üìä C√°lculo autom√°tico de b√¥nus por desempenho"
echo "üîó Integra√ß√£o com sistema de comiss√µes"
echo "üìã Gest√£o completa de pol√≠ticas de b√¥nus"
echo ""
echo "=== URLs Importantes ==="
echo "üñ•Ô∏è  Swagger UI: http://localhost:8080/swagger-ui/index.html"
echo "üìö API Docs: http://localhost:8080/api-docs"
echo "üéØ Bonus Policies: http://localhost:8080/api/bonus-policies"
echo "üìä Bonus Calculations: http://localhost:8080/api/bonus-calculations"
echo ""
echo "=== Cen√°rios Gherkin Implementados ==="
echo "‚úÖ B√¥nus por n√∫mero de clientes ativos"
echo "‚úÖ B√¥nus por faturamento agregado"
echo "‚úÖ Pol√≠tica expirada n√£o √© aplicada"
echo "‚úÖ C√°lculo autom√°tico no fechamento mensal"

